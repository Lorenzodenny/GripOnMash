@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <ul class="navbar-nav">
        @if(User.IsInRole("User"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="EditMedicoBase" asp-action="Edit">Profilo</a>
            </li>
        }
        

        @* PARTE TEST RICORDA DI RIMUOVERE *@
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="CreateUser" asp-action="CreateUser">Aggiungi un nuovo utente</a>
        </li>

       

        @if (User.IsInRole("Admin"))  // Admin (LDAP)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="CreateUser" asp-action="CreateUser">Aggiungi un nuovo utente</a>
            </li>
            <!-- Modifica del profilo degli admin LDAP -->
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="@* EditInterno *@" asp-action="@* Edit *@">Modifica profilo Admin(WOrk in Progress)s</a>
            </li>
        }


        <li class="nav-item">
            <form asp-controller="Logout" asp-action="Logout" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>

        <li class="nav-item">
            <p class="navbar-text">Ciao, @User.Identity.Name</p>
        </li>

        <li class="nav-item">
            @{
                var user = await UserManager.GetUserAsync(User);
            }
            <p class="navbar-text">Ciao, @user.Email</p>
        </li>
    </ul>
}
@* else if (HttpContext.) // controlla se esiste il cookie per autenticazione per filtrare se è loggato
{
    
} *@
else
{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Login" asp-action="Login">Login</a>
        </li>
    </ul>
}
